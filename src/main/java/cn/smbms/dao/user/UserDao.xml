<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smbms.dao.user.UserDao">
    <select id="getLoginUser" resultType="User">
        select * from smbms_user where userCode=#{userCode}
    </select>

    <select id="getUserList" resultType="User">
        select u.*,r.roleName as userRoleName from smbms_user u,smbms_role r
        <where>
            u.userRole = r.id
            <if test="userName!=null and userName!=''">
                and u.userName like CONCAT ('%',#{userName},'%')
            </if>
            <if test="userRole!=null and userRole!=''">
                and u.userRole= #{userRole}
            </if>
        </where>
        order by creationDate DESC
        limit #{currentPageNo},#{pageSize}
    </select>

    <select id="getUserById" resultType="User">
        select u.*,r.roleName as userRoleName from smbms_user u,smbms_role r where u.id=#{id} and u.userRole = r.id
    </select>

    <select id="getUserCount" resultType="int">
        select count(*) as count from smbms_user u,smbms_role r
        <where>
            u.userRole = r.id
            <if test="userName!=null and userName!=''">
                and u.userName like CONCAT ('%',#{userName},'%')
            </if>
            <if test="userRole!=null and userRole!=''">
                and u.userRole= #{userRole}
            </if>
        </where>
    </select>

    <update id="modify">
        update smbms_user
        set userName=#{userName},gender=#{gender},birthday=#{birthday},
        phone=#{phone},address=#{address},userRole=#{userRole},modifyBy=#{modifyBy},modifyDate=#{modifyDate} where id = #{id}
    </update>

    <update id="updatePwd">
        update smbms_user set userPassword= #{userPassword} where id = #{id}
    </update>

    <insert id="add" parameterType="User">
        insert into smbms_user (userCode,userName,userPassword,userRole,gender,birthday,phone,address,creationDate,createdBy,idPicPath)
					values(#{userCode},#{userName},#{userPassword},#{userRole},#{gender},#{birthday},#{phone},#{address},#{creationDate},#{createdBy},#{idPicPath})
    </insert>
    <delete id="deleteUserById">
        delete from smbms_user where id=#{id}
    </delete>
</mapper>